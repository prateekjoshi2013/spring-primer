<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.1</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.prateek.web</groupId>
	<artifactId>spring-rest-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-rest-demo</name>
	<description>Demo project for Spring Boot Rest Services</description>
	<url />
	<licenses>
		<license />
	</licenses>
	<developers>
		<developer />
	</developers>
	<scm>
		<connection />
		<developerConnection />
		<tag />
		<url />
	</scm>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<!-- spring boot web dependency for web apps 
			
		- Spring MVC: Provides the core components for building web applications, including support for
		RESTful APIs.
		- Jackson: Used for JSON processing, enabling the serialization and deserialization of Java objects
		to and from JSON
		- Embedded Web Server: Includes Tomcat by default, but you can switch to Jetty or Undertow if
		needed.
		- Validation: Provides support for bean validation using the Hibernate Validator implementation of
		the Bean Validation API
		- SLF4J and Logback: Provides logging support
		 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- lombok dependency -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- testing dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- enables live reloading  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<!-- 
				By marking this dependency as optional, you ensure that spring-boot-devtools 
				- is only included during development and not in the final production build 
				- or in the transitive dependencies of any downstream projects. 
				- This approach helps to maintain a clear separation between development and production
			environments 
			-->
			<optional>true</optional>
		</dependency>
		<!-- Spring data jpa dependecies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- 
				- Plugin config to delobok lombok annotated classes to see generated code 
				- This plugin generates the java files in generated source which causes issues
			 -->
			<!-- <plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
				<version>1.18.20.0</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>delombok</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<sourceDirectory>src/main/java</sourceDirectory>
					<outputDirectory>target/delomboked</outputDirectory>
				</configuration>
			</plugin> -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>