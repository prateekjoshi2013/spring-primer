<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.1</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.prateek.web</groupId>
	<artifactId>spring-rest-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-rest-demo</name>
	<description>Demo project for Spring Boot Rest Services</description>
	<url />
	<licenses>
		<license />
	</licenses>
	<developers>
		<developer />
	</developers>
	<scm>
		<connection />
		<developerConnection />
		<tag />
		<url />
	</scm>
	<properties>
		<java.version>17</java.version>
		<org.mapstruct.version>1.6.0.RC1</org.mapstruct.version>
		<lombok.version>1.18.32</lombok.version>
		<logbook.version>3.9.0</logbook.version>
	</properties>
	<dependencies>
		<!-- spring boot web dependency for web apps 
			
		- Spring MVC: Provides the core components for building web applications, including support for
		RESTful APIs.
		- Jackson: Used for JSON processing, enabling the serialization and deserialization of Java objects
		to and from JSON
		- Embedded Web Server: Includes Tomcat by default, but you can switch to Jetty or Undertow if
		needed.
		- Validation: Provides support for bean validation using the Hibernate Validator implementation of
		the Bean Validation API
		- SLF4J and Logback: Provides logging support
		 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- lombok dependency -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- testing dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- enables live reloading  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<!-- 
				By marking this dependency as optional, you ensure that spring-boot-devtools 
				- is only included during development and not in the final production build 
				- or in the transitive dependencies of any downstream projects. 
				- This approach helps to maintain a clear separation between development and production
			environments 
			-->
			<optional>true</optional>
		</dependency>
		<!-- Spring data jpa dependecies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- Map struct dependency  -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<!-- jakarta validation api with hibernate implementation -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!-- mysql connector for connecting with jdbc -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>9.0.0</version>
		</dependency>
		<!-- flyway migration tool -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-mysql</artifactId>
			<version>10.16.0</version>
		</dependency>
		<!-- to read and write csv  -->
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>5.9</version>
		</dependency>
		<!-- Spring security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
		</dependency>
		<!-- oauth2 resource server  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		<!-- swagger/openapi spec/doc gen dependencies refer:
		https://springdoc.org/#migrating-from-springdoc-v1 -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<!-- needed for spring security features -->
			<artifactId>springdoc-openapi-starter-common</artifactId>
			<version>2.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<!-- needed for spring web mvc  -->
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.6.0</version>
		</dependency>
		<!-- rest assured dependency with swagger request validator -->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.atlassian.oai</groupId>
			<artifactId>swagger-request-validator-restassured</artifactId>
			<version>2.41.0</version>
			<scope>test</scope>
		</dependency>
		<!-- enabling actuator endpoint -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- enabling logbook request response tracing -->
		 <dependency>
			<groupId>org.zalando</groupId>
			<artifactId>logbook-spring-boot-starter</artifactId>
			<version>${logbook.version}</version>
		 </dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- 
				- Plugin config to delobok lombok annotated classes to see generated code 
				- This plugin generates the java files in generated source which causes issues
			 -->
			<!-- <plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
				<version>1.18.20.0</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>delombok</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<sourceDirectory>src/main/java</sourceDirectory>
					<outputDirectory>target/delomboked</outputDirectory>
				</configuration>
			</plugin> -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>springdoc</id>
						<goals>
							<goal>start</goal>
							<goal>stop</goal>
						</goals>
					</execution>
					<execution>
						<id>build-info</id>
						<!-- this generates build info in target folder automatically -->
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jvmArguments>-Dspring.applicaiton.admin.enabled=true</jvmArguments>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-maven-plugin</artifactId>
				<version>1.4</version>
				<configuration>
					<apiDocsUrl>http://localhost:8081/v3/api-docs</apiDocsUrl>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>17</source>
					<target>17</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>

						<!-- additional annotation processor required as of Lombok 1.18.16 -->
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>0.2.0</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>-Amapstruct.suppressGeneratorTimestamp=true</arg>
						<arg>-Amapstruct.defaultComponentModel=spring</arg>
						<arg>-Amapstruct.verbose=true</arg>
					</compilerArgs>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>